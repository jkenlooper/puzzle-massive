limit_req_zone $binary_remote_addr zone=puzzle_list_limit_per_ip:1m rate=30r/m;
limit_req_zone $binary_remote_addr zone=player_email_register_limit_per_ip:1m rate=1r/m;
limit_req_zone $binary_remote_addr zone=puzzle_upload_limit_per_ip:1m rate=3r/m;
limit_req_zone $server_name zone=piece_move_limit:1m rate=200r/s;
limit_req_zone $binary_remote_addr zone=piece_token_limit_per_ip:1m rate=60r/s;

map $request_uri $loggable_legacy_cache {
    # Don't log requests to the anonymous login link.
    ~/puzzle-api/bit/.* 0;
    ~/newapi/user-login/.* 0;

    default 1;
}


map $request_uri $cache_expire_public {
    default off;
    # short expire on player-bit, but origin has much longer expire
    ~/chill/site/internal/player-bit/.* 5m;
    ~/chill/site/internal/attribution/.* 1d; #TODO: internal only?
    ~/chill/site/claim-player/.* off;
    ~/chill/site/reset-login/.* off;
    ~/chill/site/bit-icons/.* 1y; #TODO: internal only?
    ~/chill/site/bit-icons-attribution/.* 1d;
    ~/chill/site/puzzle/.* off;
    ~/chill/site/front/.* -1;
    ~/chill/site/api/.* 1m;
    ~/chill/site/puzzle-list/.* 1m;
    ~/chill/site/high-scores/ 1m;
    ~/chill/site/ 1m;
    ~/chill/site/.* 5m;
    ~/theme/.*?/.* 1y;
    ~/media/.* 1M;
    ~/resources/.* 1y;
    ~/.*?.png 1M;
    ~/.*?.jpg 1M;
    /favicon.ico 1M;
    /humans.txt 1d;
    /robots.txt 1d;
    /site.webmanifest 1d;
    /.well-known/.* off;
    /newapi/gallery-puzzle-list/ 30s;
    ~/newapi/puzzle-list/.* 4m;
    # Safeguard for no cache on player-puzzle-list
    /newapi/player-puzzle-list/ off;
}


map $request_uri $hotlinking_policy {
    # Set routes to 0 to allow hotlinking or direct loading (bookmarked).

    # anonymous login links
    ~/puzzle-api/bit/.* 0;
    ~/newapi/user-login/.* 0;

    # Pages on the site. Includes the query params in case the link is hi-jacked
    # with query params from some other site (common with social media sites).
    / 0;
    ~/\?.* 0;
    ~/.+/$ 0;
    ~/.+/\?.* 0;
    # admin player page uses query params for GET
    ~/chill/site/admin/player/\?.+$ 0;

    # og:image image that can be used when sharing links
    ~/.*puzzle-massive-logo.* 0;
    ~/resources/.*/preview_full.*.jpg$ 0;
    ~/resources/.*/preview_full.*.jpg\?.+$ 0;

    # files in root
    /favicon.ico 0;
    ~/favicon.ico\?.* 0;
    /humans.txt 0;
    ~/humans.txt\?.* 0;
    /robots.txt 0;
    ~/robots.txt\?.* 0;

    # certbot challenges
    ~/.well-known/.* 0;

    default $invalid_referer;
}

geo $blocked_ip {
    # Default is to not block (0)
    default 0;
    include blocked_ip.conf;
}

server {
    if ( $blocked_ip ) {
      return 444;
    }
    listen 80;
    include /etc/nginx/snippets/ssl_certificate-ssl_certificate_key.nginx.conf;

    include /etc/nginx/snippets/all_header.nginx.conf;

    # if ENVIRONMENT is development
    # server_name external-puzzle-massive localhost INTERNALIP DOMAIN_NAME $hostname;
    # else
    # server_name external-puzzle-massive puzzle-massive-blue puzzle-massive-green DOMAIN_NAME $hostname;
    include /etc/nginx/snippets/server_name-legacy-cache.nginx.conf;

    root /srv/puzzle-massive/root;

    access_log /var/log/nginx/puzzle-massive/access.log combined if=$loggable_legacy_cache;
    error_log /var/log/nginx/puzzle-massive/error.log;
    proxy_intercept_errors off;

    # The hotlinking_policy uses this with the invalid_referer variable.
    valid_referers server_names;

    # Limit the max simultaneous connections per ip address (10 per browser * 4 if within LAN)
    # Skip doing this so players on a shared VPN are not blocked.
    #limit_conn   addr 40;

    # Limit all server wide to this small amount. Override on a location level.
    client_max_body_size 20k;

    # TODO: Research these before setting.
    #client_body_buffer_size 200K;
    #client_header_buffer_size 2k;
    #large_client_header_buffers 3 1k;

    # The value none enables keep-alive connections with all browsers.
    keepalive_disable none;

    # Rewrite the homepage url
    rewrite ^/index.html$ / permanent;

    # redirect the old puzzlepage url
    rewrite ^/puzzle/(.*)$ /chill/site/puzzle/$1/ permanent;

    # rewrite old bit login (Will probably always need to have this rewritten)
    rewrite ^/puzzle-api/bit/([^/]+)/?$ /newapi/user-login/$1/;

    # handle old style of scale query param where 'scale=' meant to use without scaling
    rewrite ^/chill/site/puzzle/([^/]+)/$ /chill/site/puzzle/$1/scale/0/? redirect;

    # redirect old puzzle queues
    rewrite ^/chill/site/queue/(.*)$ /chill/site/puzzle-list/ permanent;

    # temporary redirect player profile page
    # TODO: remove redirect when implementing public player profile pages
    rewrite ^/chill/site/player/[^/]+/$ /chill/site/player/ redirect;

    # Temporary redirect document pages to allow robots to index them.
    rewrite ^/chill/site/(about|faq|help|credits|buy-stuff)/$ /$1/ redirect;

    include /etc/nginx/snippets/rewrite-home_page_route.nginx.conf; # HOME_PAGE_ROUTE

    # Document pages go to /chill/site/ and strip query params
    rewrite ^/d/(.*)/$ /chill/site/$1/? last;

    # redirect old document pages
    rewrite ^/(about|faq|help|credits|buy-stuff)/$ /d/$1/ redirect;

    # Ignore query params on media so they are not part of the cache.
    rewrite ^/(media/.*)$ /$1? last;

    # Keep the query params on /resources/.*; they are for cache-busting.
    #rewrite ^/(resources/.*)$ /$1? last;

    # Ignore query params on root files so they are not part of the cache.
    # Matches root files: /humans.txt, /robots.txt, /puzzle-massive-logo-600.png, /puzzle-massive-logo-600.jpg, favicon.ico
    rewrite ^/([^/]+)(\.txt|\.png|\.jpg|\.ico)$ /$1$2? last;

    # Preserve query params on the route for /chill/site/admin/player/
    rewrite ^/(chill/site/admin/player/.*)$ /$1 last;

    # Preserve query params on the route for /chill/site/new-player/
    rewrite ^/(chill/site/new-player/.*)$ /$1 last;

    # Ignore query params on pages so they are not part of the cache.
    rewrite ^/(d|chill/site)/(.*)/$ /$1/$2/? last;

    # Ignore query params on theme so they are not part of the cache.
    # Rewrite to be served from dist directory
    rewrite ^/theme/.*?/(.*)$ /client-side-public/dist/$1? last;

    # Ignore query params so they are not part of the cache.
    rewrite ^/design-tokens/.*?/(.*)$ /design-tokens/v1/$1? last;

    # Ignore query params on favicon.ico for production.
    rewrite ^/(favicon\.ico)$ /$1? last;

    # Ignore query params on site.webmanifest for production.
    rewrite ^/(site.webmanifest)$ /$1? last;

    location / {
        if ($hotlinking_policy) {
            return 444;
        }

        expires $cache_expire_public;
        add_header X-debug-location "legacy-cache-/";
        add_header X-Proxy-Cache $upstream_cache_status;
        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        proxy_cache pm_cache_zone;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location /resources/ {
        if ($hotlinking_policy) {
            return 444;
        }

        add_header X-debug-location "legacy-cache-/resources/";
        add_header X-Proxy-Cache $upstream_cache_status;
        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        proxy_cache pm_cache_zone;
        proxy_cache_valid 1y;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location /chill/site/internal/ {
        expires $cache_expire_public;
        add_header X-debug-location "legacy-cache-/chill/site/internal/";
        add_header X-Proxy-Cache $upstream_cache_status;
        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        proxy_cache pm_cache_zone;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location /newapi/ {
        if ($hotlinking_policy) {
            return 444;
        }

        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location = /newapi/puzzle-list/ {
        if ($hotlinking_policy) {
            return 444;
        }
        # Prevent too many puzzle list queries at once.
        limit_req zone=puzzle_list_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location /newapi/player-email-register/ {
        if ($hotlinking_policy) {
            return 444;
        }
        # Prevent too many requests at once
        limit_req zone=player_email_register_limit_per_ip burst=5 nodelay;

        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location ~* ^/newapi/puzzle/.*/piece/.*/token/ {
        if ($hotlinking_policy) {
            return 444;
        }

        include /etc/nginx/snippets/limit_req-piece_token_limit_per_ip.nginx.conf; # only for PUZZLE_RULES all nginx_piece_publish_limit
        include /etc/nginx/snippets/proxy_params.nginx.conf;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
        #TODO: why not push to PORTPUBLISH instead since it isn't something that is cached?
    }

    location ~* ^/newapi/puzzle/.*/piece/.*/move/ {
        if ($hotlinking_policy) {
            return 444;
        }

        include /etc/nginx/snippets/limit_req-piece_move_limit.nginx.conf; # only for PUZZLE_RULES all nginx_piece_publish_limit
        include /etc/nginx/snippets/proxy_params.nginx.conf;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;

        #TODO: why not push to PORTPUBLISH instead since it isn't something that is cached?
    }


    location ~* ^/newapi/puzzle-upload/$ {
        if ($hotlinking_policy) {
            return 444;
        }
        include /etc/nginx/snippets/client_max_body_size-puzzle-upload.nginx.conf;

        # Prevent too many uploads at once
        # TODO: move limits to the cache server
        limit_req zone=puzzle_upload_limit_per_ip burst=5 nodelay;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location ~* ^/chill/site/puzzle/(.*/)?$ {
        # At this time all routes on chill/* are GETs
        limit_except GET {
            deny all;
        }

        # Redirect players without a user or shareduser cookie to the new-player page
        if ($http_cookie !~* "(user|shareduser)=([^;]+)(?:;|$)") {
            rewrite ^/chill/(.*)$ /chill/site/new-player/?next=/chill/$1? redirect;
        }

        add_header Cache-Control "public, max-age=0, must-revalidate";
        add_header X-debug-location "legacy-cache-/chill/site/puzzle/";
        add_header X-Proxy-Cache $upstream_cache_status;
        include /etc/nginx/snippets/all_header.nginx.conf;

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        proxy_cache pm_cache_zone;

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    location = /chill/site/new-player/ {
        # At this time all routes on chill/* are GETs
        limit_except GET {
            deny all;
        }
        # Redirect players with a user cookie to the player profile page
        if ($http_cookie ~* "user=([^;]+)(?:;|$)") {
            rewrite ^/chill/(.*)$ /chill/site/player/ redirect;
        }

        include /etc/nginx/snippets/proxy_params.nginx.conf;
        include /etc/nginx/snippets/proxy_redirect-on-legacy-cache.nginx.conf; # only for .vagrant-overrides

        # proxy_pass http://HOSTORIGIN:PORTORIGIN
        include /etc/nginx/snippets/proxy_pass-origin.nginx.conf;
    }

    # /stream/puzzle/<channel>/
    location ~* ^/stream/puzzle/([^/]+)/$ {
        if ($hotlinking_policy) {
            return 444;
        }

        proxy_pass_header Server;

        include /etc/nginx/snippets/proxy_params.nginx.conf;

        proxy_redirect off;

        # Set timeout for connections to be 5 minutes
        proxy_read_timeout 300s;

        # Required in order to WebSockets or Streaming (sse). Async workers are
        # needed then.
        proxy_buffering off;

        # proxy_pass http://HOSTSTREAM:PORTSTREAM
        include /etc/nginx/snippets/proxy_pass-stream.nginx.conf;

        # Channel is in the route, so /stream/puzzle/puzzle_id/ will go to: /stream?channel=puzzle:puzzle_id
        rewrite ^/stream/puzzle/([^/]+)/$ /stream?channel=puzzle:$1? break;
    }

    location ~* ^/resources/.*/(original.jpg|original.*.jpg)$ {
        deny all;
    }

    location /chill/site/admin/ {
        include /etc/nginx/allow_deny_admin.nginx.conf;
        proxy_pass_header Server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        include /etc/nginx/snippets/proxy_pass-proxy_redirect-chill.nginx.conf;

        auth_basic "Restricted Content";
        auth_basic_user_file /srv/puzzle-massive/.htpasswd;

        rewrite ^/chill/(.*)$ /$1 break;
    }


    # TODO: logout of auth basic doesn't work.  Closing the browser seems to be
    # the only good method?
    location = /admin-logout/ {
        auth_basic "Restricted Content";
        auth_basic_user_file /srv/puzzle-massive/.htpasswd;
        return 401;
    }
    location /newapi/admin/ {
        include /etc/nginx/allow_deny_admin.nginx.conf;

        auth_basic "Restricted Content";
        auth_basic_user_file /srv/puzzle-massive/.htpasswd;

        proxy_pass_header Server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include /etc/nginx/snippets/proxy_pass-proxy_redirect-api.nginx.conf;
        rewrite ^/newapi/(.*)$ /$1 break;
    }
    location ~* ^/newapi/admin/puzzle/promote-suggested/$ {
        if ($hotlinking_policy) {
            return 444;
        }
        include /etc/nginx/allow_deny_admin.nginx.conf;
        include /etc/nginx/snippets/client_max_body_size-admin-puzzle-promote-suggested.nginx.conf;

        proxy_pass_header Server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include /etc/nginx/snippets/proxy_pass-proxy_redirect-api.nginx.conf;
        rewrite ^/newapi/(.*)$ /$1 break;
    }


    location /stats/ {
        root /srv/puzzle-massive/;
        index awstats.puzzle.massive.xyz.html;
        auth_basic "Restricted";
        auth_basic_user_file /srv/puzzle-massive/.htpasswd;
        access_log /var/log/nginx/puzzle-massive/access.awstats.log;
        error_log /var/log/nginx/puzzle-massive/error.awstats.log;
        try_files $uri =404;
    }

    include /etc/nginx/snippets/location-newapi-message.nginx.conf;
    include /etc/nginx/snippets/location-error_page.nginx.conf;

    # Skipping divulger since it is not needed at the moment.
    #location /divulge/ {
    #  proxy_pass_header Server;
    #  proxy_set_header X-Real-IP  $remote_addr;
    #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #  proxy_pass http://127.0.0.1:${PORTDIVULGER};

    #  # Upgrade to support websockets
    #  proxy_http_version 1.1;
    #  proxy_set_header Upgrade $http_upgrade;
    #  proxy_set_header Connection "upgrade";

    #  # Default timeout is 60s
    #  proxy_read_timeout 500s;
    #}

}
