---
#https://docs.ansible.com/ansible/latest/collections/ansible/posix/synchronize_module.html#ansible-collections-ansible-posix-synchronize-module

- name: Synchronize old swap to new swap
  hosts: legacy_puzzle_massive_new_swap
  user: dev
  tasks:

    - name: First synchronize of the puzzle massive resources directory from old_swap
      ansible.posix.synchronize:
        mode: pull
        src: "rsync://{{ old_swap }}/srv/puzzle-massive/resources/"
        dest: /srv/puzzle-massive/resources/
      delegate_to: "{{ inventory_hostname }}"

    - name: Synchronize .htpasswd file that is used for admin logins
      ansible.posix.synchronize:
        mode: pull
        src: "rsync://{{ old_swap }}/srv/puzzle-massive/.htpasswd"
        dest: /srv/puzzle-massive/
      delegate_to: "{{ inventory_hostname }}"

- name: Stop old swap and backup
  hosts: legacy_puzzle_massive_old_swap
  user: dev
  tasks:

    - name: Show the message
      become: true
      ansible.builtin.template:
        owner: dev
        group: dev
        mode: "0644"
        src: "{{ message_file }}"
        dest: /srv/puzzle-massive/root/puzzle-massive-message.html

    - name: Stop old swap
      become: true
      command: "/usr/local/src/puzzle-massive/bin/appctl.sh stop"
      args:
        chdir: /usr/local/src/puzzle-massive/

    - name: Clear NGINX cache
      become: true
      command: "/usr/local/src/puzzle-massive/bin/clear_nginx_cache.sh"
      args:
        chdir: /usr/local/src/puzzle-massive/

    - name: Start only api service
      become: true
      ansible.builtin.systemd:
        name: puzzle-massive-api
        state: started

    - name: Create backup
      command: "/usr/local/src/puzzle-massive/bin/backup.sh -c db-old_swap.dump.gz"
      args:
        chdir: /usr/local/src/puzzle-massive/

    - name: Stop api service
      become: true
      ansible.builtin.systemd:
        name: puzzle-massive-api
        state: stopped


- name: Setup new swap with old swap data
  hosts: legacy_puzzle_massive_new_swap
  user: dev
  tasks:

    - name: Remove blank sqlite db from new swap
      command: rm -f /var/lib/puzzle-massive/sqlite3/db*

    - name: Clear nginx cache
      command: ./bin/clear_nginx_cache.sh
      args:
        chdir: /usr/local/src/puzzle-massive/
      become: true

    - name: Get the redis database number
      command: ./bin/puzzle-massive-site-cfg-echo site.cfg REDIS_DB
      args:
        chdir: /usr/local/src/puzzle-massive/
      register: REDIS_DB

    - name: Use `flushdb` on the new server to remove all keys on the redis database.
      command: "redis-cli -n {{ REDIS_DB }} flushdb"

    - name: Second synchronize of the puzzle massive resources directory from old_swap
      ansible.posix.synchronize:
        mode: pull
        src: "rsync://{{ old_swap }}/srv/puzzle-massive/resources/"
        dest: /srv/puzzle-massive/resources/
      delegate_to: "{{ inventory_hostname }}"

    - name: Copy sqlite database
      ansible.posix.synchronize:
        mode: pull
        src: "rsync://{{ old_swap }}/usr/local/src/puzzle-massive/db-old_swap.dump.gz"
        dest: /usr/local/src/puzzle-massive/
      delegate_to: "{{ inventory_hostname }}"

    - name: Touch sqlite3 database file db
      ansible.builtin.file:
        state: touch
        owner: dev
        group: dev
        path: "/var/lib/puzzle-massive/sqlite3/db"
    - name: Load up the sqlite db file with the db-old_swap.dump.gz
      shell: zcat db-old_swap.dump.gz | sqlite3 /var/lib/puzzle-massive/sqlite3/db
      args:
        chdir: /usr/local/src/puzzle-massive/

    - name: Update the sqlite db file with the db.dump.sql
      shell: cat db.dump.sql | sqlite3 /var/lib/puzzle-massive/sqlite3/db
      args:
        chdir: /usr/local/src/puzzle-massive/

    - name: Set the sqlite db to be in wal mode
      shell: echo 'pragma journal_mode=wal' | sqlite3 /var/lib/puzzle-massive/sqlite3/db

    # TODO: Only if there are applicable migrate scripts to run.
    # This should check it's own database migrate version to see if it is behind
    # and run the migrate scripts it needs to.
    # TODO: Also see same note about this in bin/quick-deploy.sh.
    #- name: Run any migrate scripts needed for this version update if applicable
    #  shell: api/api/jobs/migrate_from_2_x_to_x.py site.cfg
    #  args:
    #    executable: /usr/local/src/puzzle-massive/bin/python
    #    chdir: /usr/local/src/puzzle-massive/

    - name: Update any bit icon authors and add new bit icons
      shell: api/api/jobs/insert-or-replace-bit-icons.py
      args:
        executable: /usr/local/src/puzzle-massive/bin/python
        chdir: /usr/local/src/puzzle-massive/

    - name: Update the enabled puzzle features
      shell: api/api/update_enabled_puzzle_features.py
      args:
        executable: /usr/local/src/puzzle-massive/bin/python
        chdir: /usr/local/src/puzzle-massive/

